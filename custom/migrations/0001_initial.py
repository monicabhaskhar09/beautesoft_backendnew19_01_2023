# Generated by Django 3.0.7 on 2020-10-09 06:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmpLevel',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('level_code', models.CharField(blank=True, db_column='Level_Code', max_length=20, null=True)),
                ('level_desc', models.CharField(blank=True, db_column='Level_Desc', max_length=50, null=True)),
                ('level_isactive', models.BooleanField(db_column='Level_IsActive')),
                ('level_sequence', models.IntegerField(blank=True, db_column='Level_sequence', null=True)),
                ('level_spa', models.BooleanField(db_column='Level_SPA')),
                ('mintarget', models.FloatField(blank=True, db_column='MinTarget', null=True)),
                ('fromsalary', models.FloatField(blank=True, db_column='FromSalary', null=True)),
                ('tosalary', models.FloatField(blank=True, db_column='ToSalary', null=True)),
                ('getgroupcomm', models.BooleanField(blank=True, db_column='GetGroupComm', null=True)),
                ('group_code', models.CharField(blank=True, db_column='Group_Code', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Emp_Level',
            },
        ),
        migrations.CreateModel(
            name='HolditemSetup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('hold_code', models.CharField(blank=True, db_column='Hold_code', max_length=50, null=True)),
                ('hold_desc', models.CharField(blank=True, db_column='Hold_Desc', max_length=50, null=True)),
            ],
            options={
                'db_table': 'HoldItem_Setup',
            },
        ),
        migrations.CreateModel(
            name='ItemCart',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=255, null=True)),
                ('customercode', models.CharField(blank=True, db_column='customerCode', max_length=50, null=True)),
                ('itemcode', models.CharField(blank=True, db_column='itemCode', max_length=50, null=True)),
                ('itemdesc', models.CharField(blank=True, db_column='itemDesc', max_length=500, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('sitecode', models.CharField(blank=True, db_column='siteCode', max_length=20, null=True)),
                ('isactive', models.BooleanField(blank=True, db_column='isActive', null=True)),
                ('timstamp', models.DateTimeField(blank=True, db_column='timStamp', null=True)),
                ('redeempoint', models.FloatField(blank=True, db_column='redeemPoint', null=True)),
            ],
            options={
                'db_table': 'item_Cart',
            },
        ),
        migrations.CreateModel(
            name='PaymentRemarks',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('r_code', models.CharField(blank=True, db_column='R_Code', max_length=20, null=True)),
                ('r_desc', models.CharField(blank=True, db_column='R_Desc', max_length=100, null=True)),
                ('isactive', models.BooleanField(db_column='IsActive')),
            ],
            options={
                'db_table': 'Payment_Remarks',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_code', models.CharField(blank=True, db_column='Room_Code', max_length=10, null=True)),
                ('displayname', models.CharField(blank=True, db_column='DisplayName', max_length=50, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=100, null=True)),
                ('isactive', models.BooleanField(blank=True, db_column='Isactive', null=True)),
                ('equipment', models.CharField(blank=True, db_column='Equipment', max_length=50, null=True)),
                ('site_code', models.CharField(blank=True, db_column='Site_Code', max_length=50, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Sequence_No', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'Room',
            },
        ),
        migrations.CreateModel(
            name='RoundPoint',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('point', models.FloatField(blank=True, db_column='Point', null=True)),
                ('roundvalue', models.FloatField(blank=True, db_column='RoundValue', null=True)),
            ],
            options={
                'db_table': 'Round_Point',
            },
        ),
        migrations.CreateModel(
            name='RoundSales',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sales', models.FloatField(blank=True, db_column='Sales', null=True)),
                ('roundvalue', models.FloatField(blank=True, db_column='RoundValue', null=True)),
            ],
            options={
                'db_table': 'Round_Sales',
            },
        ),
        migrations.CreateModel(
            name='VoucherRecord',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sa_transacno', models.CharField(blank=True, max_length=20, null=True)),
                ('voucher_name', models.CharField(blank=True, db_column='Voucher_Name', max_length=100, null=True)),
                ('voucher_no', models.CharField(blank=True, db_column='Voucher_No', max_length=50, null=True)),
                ('value', models.FloatField(blank=True, db_column='Value', null=True)),
                ('sa_date', models.DateTimeField(blank=True, null=True)),
                ('cust_code', models.CharField(blank=True, db_column='Cust_code', max_length=20, null=True)),
                ('cust_name', models.CharField(blank=True, db_column='Cust_Name', max_length=100, null=True)),
                ('percent', models.FloatField(blank=True, db_column='Percent', null=True)),
                ('site_code', models.CharField(blank=True, db_column='Site_Code', max_length=50, null=True)),
                ('issued_expiry_date', models.DateTimeField(blank=True, db_column='issued_Expiry_Date', null=True)),
                ('issued_staff', models.CharField(blank=True, db_column='issued_Staff', max_length=50, null=True)),
                ('onhold', models.CharField(blank=True, db_column='onHold', max_length=50, null=True)),
                ('paymenttype', models.CharField(blank=True, db_column='PaymentType', max_length=50, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('type_code', models.CharField(blank=True, max_length=50, null=True)),
                ('used', models.IntegerField(blank=True, db_column='Used', null=True)),
                ('ref_fullvoucherno', models.CharField(blank=True, db_column='Ref_FullVoucherNo', max_length=20, null=True)),
                ('ref_rangefrom', models.CharField(blank=True, db_column='Ref_RangeFrom', max_length=20, null=True)),
                ('ref_rangeto', models.CharField(blank=True, db_column='Ref_RangeTo', max_length=20, null=True)),
                ('site_allocate', models.CharField(blank=True, db_column='Site_Allocate', max_length=20, null=True)),
                ('dt_lineno', models.IntegerField(blank=True, db_column='dt_LineNo', null=True)),
            ],
            options={
                'db_table': 'Voucher_Record',
            },
        ),
    ]
